<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AcademicPaper" xml:space="preserve">
    <value>Lucrare Academică</value>
  </data>
  <data name="AddDirectory" xml:space="preserve">
    <value>Adaugă dosar</value>
  </data>
  <data name="AddNewLibrary" xml:space="preserve">
    <value>Adaugă Librărie Nouă</value>
  </data>
  <data name="Anime" xml:space="preserve">
    <value>Anime</value>
  </data>
  <data name="AudioBook" xml:space="preserve">
    <value>Carte Audio</value>
  </data>
  <data name="AudioContent" xml:space="preserve">
    <value>Conținut Audio</value>
  </data>
  <data name="BackToLibraries" xml:space="preserve">
    <value>Înapoi La Biblioteci</value>
  </data>
  <data name="Book" xml:space="preserve">
    <value>Carte</value>
  </data>
  <data name="BookSeries" xml:space="preserve">
    <value>Serie de Cărți</value>
  </data>
  <data name="ComicBook" xml:space="preserve">
    <value>Bandă Desenată</value>
  </data>
  <data name="ComicSeries" xml:space="preserve">
    <value>Serie de Benzi Desenate</value>
  </data>
  <data name="Concert" xml:space="preserve">
    <value>Concert</value>
  </data>
  <data name="Cover" xml:space="preserve">
    <value>Preluare</value>
  </data>
  <data name="DescriptionDirectories" xml:space="preserve">
    <value>Selectează dosarele care conțin fișierele media ale acestei biblioteci</value>
  </data>
  <data name="DescriptionLibraryType" xml:space="preserve">
    <value>Selectează tipul de conținut media pe care îl va conține această bibliotecă</value>
  </data>
  <data name="DescriptionTitle" xml:space="preserve">
    <value>Un nume pentru identificarea acestei biblioteci</value>
  </data>
  <data name="Directories" xml:space="preserve">
    <value>Dosare</value>
  </data>
  <data name="Documentary" xml:space="preserve">
    <value>Documentar</value>
  </data>
  <data name="EBook" xml:space="preserve">
    <value>Carte Electronică</value>
  </data>
  <data name="EditLibrary" xml:space="preserve">
    <value>Editează Bibliotecă</value>
  </data>
  <data name="FilmFranchise" xml:space="preserve">
    <value>Franciză de Film</value>
  </data>
  <data name="FilmSeries" xml:space="preserve">
    <value>Serie de Filme</value>
  </data>
  <data name="GeneralInformation" xml:space="preserve">
    <value>Informații Generale</value>
  </data>
  <data name="GraphicNovel" xml:space="preserve">
    <value>Roman Grafic</value>
  </data>
  <data name="Interview" xml:space="preserve">
    <value>Interviu</value>
  </data>
  <data name="LibrarySaved" xml:space="preserve">
    <value>Biblioteca A Fost Salvată</value>
  </data>
  <data name="LibraryType" xml:space="preserve">
    <value>Tip Bibliotecă</value>
  </data>
  <data name="LivePerformance" xml:space="preserve">
    <value>Spectacol Live</value>
  </data>
  <data name="Magazine" xml:space="preserve">
    <value>Revistă</value>
  </data>
  <data name="Manga" xml:space="preserve">
    <value>Manga</value>
  </data>
  <data name="MiscellaneousContent" xml:space="preserve">
    <value>Conținut Divers</value>
  </data>
  <data name="Movie" xml:space="preserve">
    <value>Film</value>
  </data>
  <data name="Music" xml:space="preserve">
    <value>Muzică</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Altceva</value>
  </data>
  <data name="Personal" xml:space="preserve">
    <value>Personal</value>
  </data>
  <data name="PhotoAlbum" xml:space="preserve">
    <value>Album Foto</value>
  </data>
  <data name="Podcast" xml:space="preserve">
    <value>Podcast</value>
  </data>
  <data name="RadioShow" xml:space="preserve">
    <value>Emisiune Radio</value>
  </data>
  <data name="Remix" xml:space="preserve">
    <value>Remix</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Șterge</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Salvează</value>
  </data>
  <data name="Screenplay" xml:space="preserve">
    <value>Scenariu</value>
  </data>
  <data name="SheetMusic" xml:space="preserve">
    <value>Partitură Muzicală</value>
  </data>
  <data name="Soundeffect" xml:space="preserve">
    <value>Efect Sonor</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Titlu</value>
  </data>
  <data name="Tutorial" xml:space="preserve">
    <value>Tutorial</value>
  </data>
  <data name="TvShow" xml:space="preserve">
    <value>Serial TV</value>
  </data>
  <data name="Videoclip" xml:space="preserve">
    <value>Videoclip</value>
  </data>
  <data name="VideoContent" xml:space="preserve">
    <value>Conținut Video</value>
  </data>
  <data name="VisualContent" xml:space="preserve">
    <value>Conținut Vizual</value>
  </data>
  <data name="WrittenContent" xml:space="preserve">
    <value>Conținut Scris</value>
  </data>
  <data name="YouTube" xml:space="preserve">
    <value>YouTube</value>
  </data>
</root>